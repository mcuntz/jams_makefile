# -*- Makefile -*-

#
# Setup file for Intel compiler 13.1.0 at eve.ufz.de
#
# LICENSE
#    This file is part of the UFZ makefile project.
#
#    The UFZ makefile project is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Lesser General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    The UFZ makefile project is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#    GNU Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public License
#    along with the UFZ makefile project. If not, see <http://www.gnu.org/licenses/>.
#
#    Copyright 2012 Matthias Cuntz

# The Makefile assumes the standard bin, include and lib directories
# i.e. if SOMEDIR = /path/to/lib, the make file will define the two dirs
#   SOMEINC ?= SOMEDIR/include
#   SOMELIB ?= SOMEDIR/lib
# Define subirectories if another structure

# Paths
INTEL    := /opt/intel/composer_xe_2013.2.146
INTELDIR := /usr/local/intel/13.1.0
INTELLIB := $(INTELDIR)
INTELBIN := $(INTEL)/bin/intel64

# Compiling
F90 := $(INTELBIN)/ifort
FC  := $(F90)
CC  := $(INTELBIN)/icc
ifeq ($(release),debug)
    F90FLAGS += -check all -warn all -g -debug -traceback -fp-stack-check -O0 -debug
    FCFLAGS  += -g -debug -traceback -fp-stack-check -O0 -debug
    CFLAGS   += -g -debug -traceback -fp-stack-check -O0 -debug -Wall -Wcheck
else
    # -vec-report1 to see vectorized loops; -vec-report2 to see also non-vectorized loops
    F90FLAGS += -O3 -vec-report0 -override-limits
    FCFLAGS  += -O3 -vec-report0 -override-limits
    CFLAGS   += -O3
endif
F90FLAGS += -assume byterecl -cpp -fp-model source -m64 # precise -> source: suppress warning, computation identical
MODFLAG  := -module # space significant
FCFLAGS  += -assume byterecl -cpp -fp-model source -m64 -fixed
CFLAGS   += -m64 -std=c99
DEFINES  += -DINTEL -DINTEL_COMPILER

# Linking
ifeq ($(istatic),static)
    LIBS += -static-intel
endif
LIBS += -L$(INTELLIB) -limf -lm -lsvml
ifneq ($(istatic),static)
     LIBS += -lintlc
endif
RPATH += -Wl,-rpath,$(INTELLIB)

# IMSL
IMSLDIR :=

# MKL
MKLDIR := $(INTEL)/mkl
MKLINC := $(MKLDIR)/include/intel64/lp64
MKLLIB := $(INTELDIR)/mkl/lib/intel64
MKL95DIR := $(MKLDIR)
MKL95INC := $(MKL95DIR)/include/intel64/lp64
MKL95LIB := $(MKL95DIR)/lib/intel64

# NETCDF
ifeq ($(netcdf),netcdf3)
    NCDIR := /usr/local/netcdf/3.6.3_intel_12.0.4
else
    NCDIR   := /usr/local/netcdf/4.1.1_intel_12.0.4
    SZLIB   := /usr/local/szip/2.1/lib
    HDF5LIB := /usr/local/hdf5/1.8.6/lib
endif

# PROJ
PROJ4DIR := /usr/local/proj/4.7.0
FPROJDIR := /usr/local/fproj/4.7.0_intel11.1.075

# LAPACK
LAPACKDIR   :=
LAPACKLIB   :=
GFORTRANDIR := /usr
GFORTRANLIB := $(GFORTRANDIR)/lib64

# Documentation
DOXYGENDIR := /usr/local/doxygen/1.8.2-1/bin
DOTDIR     := /usr/local/graphviz/2.28.0-2/bin
TEXDIR     := /usr/local/texlive/2011/bin/x86_64-linux
PERLDIR    := /usr/bin
ifneq ($(LDPATH),)
    LDPATH += :/usr/local/graphviz/2.28.0-2/lib:/usr/local/librsvg/2.36.4-1/lib
else
    LDPATH := /usr/local/graphviz/2.28.0-2/lib:/usr/local/librsvg/2.36.4-1/lib
endif
LDPATH     += :/usr/local/libcroco/0.6.8-1/lib:/usr/local/pango/1.32.4-1/lib
LDPATH     += :/usr/local/harfbuzz/0.9.9-1/lib:/usr/local/cairo/1.12.8-2/lib
LDPATH     += :/usr/local/fontconfig/2.10.2-1/lib:/usr/local/freetype/2.4.10-1/lib
LDPATH     += :/usr/local/expat/2.1.0-1/lib:/usr/local/pixman/0.28.0-1/lib
LDPATH     += :/usr/local/libxml2/2.8.0/lib:/usr/local/gdk-pixbuf/2.26.5-1/lib
LDPATH     += :/usr/local/glib/2.34.3-1/lib:/usr/local/libffi/3.0.11-1/lib

# Check some dependices, e.g. IMSL needs intel11 on eve
ifneq (,$(findstring $(system),eve))
    ifneq (,$(findstring $(imsl),vendor imsl))
        ifneq ($(icompiler),intel11)
            $(error Error: IMSL needs intel11.0.075, set 'compiler=intel11')
        endif
        ifeq ($(imsl),vendor)
            ifeq (,$(findstring $(mkl),mkl mkl95))
                $(error Error: IMSL vendor needs MKL, set 'mkl=mkl' or 'mkl=mkl95')
            endif
        endif
    endif
endif

# Lapack on Eve needs libgfortran
ifeq ($(lapack),true)
    ifneq (exists, $(shell if [ -d "$(GFORTRANDIR)" ] ; then echo 'exists' ; fi))
        $(error Error: GFORTRAN path '$(GFORTRANDIR)' not found.)
    endif
    GFORTRANLIB ?= $(GFORTRANDIR)/lib
    iLIBS        += -L$(GFORTRANLIB) -lgfortran
    RPATH       += -Wl,-rpath,$(GFORTRANLIB)
endif
